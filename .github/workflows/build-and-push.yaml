name: Push Artifacts to Azure Registry

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

env:
  DOMAIN: YOUR_DOMAIN

jobs:
  push-artifacts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Login to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.ACR_URL }}
          username: ${{ secrets.ACR_PUSH_USER }}
          password: ${{ secrets.ACR_PUSH_TOKEN }}

      - name: Build and Push Docker image
        id: build_and_push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ secrets.ACR_URL }}/${{ env.DOMAIN }}/${{ github.event.repository.name }}:${{ github.ref_name }}

      - name: Update Docker Image in artifacts.json
        uses: MapColonies/shared-workflows/actions/update-artifacts-file@update-artifacts-file-v1
        with:
          domain: ${{ env.DOMAIN }}
          type: docker
          artifact_name: ${{ github.event.repository.name }}
          artifact_tag: ${{ github.ref_name }} # Using the git tag directly
          registry: ${{ secrets.ACR_URL }}
          github_token: ${{ secrets.GH_PAT }}

      - name: Remove v from the tag
        id: remove_v
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Push Chart to ACR
        uses: appany/helm-oci-chart-releaser@v0.5.0
        with:
          name: ${{ github.event.repository.name }}
          repository: helm/${{ env.DOMAIN }}
          tag: ${{ steps.remove_v.outputs.version }}
          path: ./helm
          registry: ${{ secrets.ACR_URL }}
          registry_username: ${{ secrets.ACR_PUSH_USER }}
          registry_password: ${{ secrets.ACR_PUSH_TOKEN }}
          update_dependencies: 'true' # Defaults to false

      - name: Update Helm Package in artifacts.json
        uses: MapColonies/shared-workflows/actions/update-artifacts-file@update-artifacts-file-v1
        with:
          domain: ${{ env.DOMAIN }}
          type: helm
          artifact_name: ${{ github.event.repository.name }}
          artifact_tag: ${{ steps.remove_v.outputs.version }}
          registry: ${{ secrets.ACR_URL }}
          github_token: ${{ secrets.GH_PAT }}
